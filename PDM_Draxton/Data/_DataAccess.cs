using ComercioExteriorBlazor.conectores; using ComercioExteriorBlazor.Models; using ComercioExteriorBlazor.utilidades; using System.Data; using System.Data.SqlClient; using System.Globalization; using Microsoft.Extensions.Configuration; using System.Text;   namespace ComercioExteriorBlazor.Data {     public class DataAccess     {         BaseDatos bd = new BaseDatos();         String conexionBD = String.Empty;         String conexionBD_32 = String.Empty;         static Funciones fn = new Funciones();         //dll_Gis.Funciones fn = new dll_Gis.Funciones();          static IConfigurationBuilder configBuilder = new ConfigurationBuilder().AddJsonFile("appsettings.json");         IConfiguration configuration = configBuilder.Build();          public DataAccess()         {                          try             {                 string x = "DataSource=SRGISMTY2-0726;InitialCatalog=GIS_ComercioExterior;UserID=netdesa;Password=1#Desa$Net$2018;PersistSecurityInfo=True";                 //string x = ""configuration.GetConnectionString("conexion").ToString();                 string cn = fn.Encriptar(x);  //configuration.GetConnectionString("conexion").ToString();                                  conexionBD = fn.Desencriptar("w4t0/xkDfxf0ZiuggRn7BnFqZCI/Ige7ukhAHGjtiF1LAAkH48vupDTOOAm0m33RudY2tiKGSpj7p+wqghhoXwHtYuknyaJcyOw3K6RQpEGZkO0FWRpn+VccTWyWE/9GvcH07rYEBqUH5HKLZUvMkgafxJGLnw2mT+N1NRt5Wiw=");                  try                 {                  }                 catch (Exception)                 {                  }              }             catch (Exception)             {                  throw;             }           }            public Boolean cons_Pedimento(out List<Pedimento> lista, out String msgError)         {             bool boolProcess = true;             msgError = string.Empty;             DataTable dt = new DataTable();             lista = new List<Pedimento>();              try             {                  if (!bd.ExecuteProcedure(conexionBD, "cons_DataStage", out dt, 120))                 {                     boolProcess = false;                     msgError = bd._error.ToString();                 }                 else                 {                     for (int r = 0; r < dt.Rows.Count; r++)                     {                         Pedimento pedimento = new Pedimento();                         pedimento.Id = Convert.ToInt32(dt.Rows[r]["Id"]);                         pedimento.NumeroFactura = dt.Rows[r]["NumeroFacturacion"].ToString();                         pedimento.FechaFacturacion = Convert.ToDateTime(dt.Rows[r]["FechaFacturacion"]);                         pedimento.NumPedimento = dt.Rows[r]["tipoDocumento"].ToString();                                                                            lista.Add(pedimento);                     }                     boolProcess = true;                 }             }             catch (Exception ex)             {                 boolProcess = false;                 msgError = ex.ToString();             }             return boolProcess;         }          public Boolean consultaTasaCero(string ?IdNegocio, DateTime periodo, out List<TasaCero> lista, out String msgError)         {             bool boolProcess = true;             msgError = string.Empty;             DataTable dt = new DataTable();             lista = new List<TasaCero>();              SqlParameter[] @params = new SqlParameter[2];             @params[0] = new SqlParameter("@IdNegocio", IdNegocio);             @params[1] = new SqlParameter("@Fecha", periodo);             try             {                  if (!bd.ExecuteProcedure(conexionBD, "cons_TasaCero", @params, out dt, 120))                 {                     boolProcess = false;                     msgError = bd._error.ToString();                 }                 else                 {                     for (int r = 0; r < dt.Rows.Count; r++)                     {                         TasaCero tasaCero = new TasaCero();                         tasaCero.UUID = dt.Rows[r]["UUID"].ToString();                         tasaCero.Pedimento = dt.Rows[r]["Pedimento"].ToString();                         tasaCero.Folio = dt.Rows[r]["Folio"].ToString();                         tasaCero.rfcReceptor = dt.Rows[r]["RFCReceptor"].ToString();                          lista.Add(tasaCero);                     }                     boolProcess = true;                 }             }             catch (Exception ex)             {                 boolProcess = false;                 msgError = ex.ToString();             }             return boolProcess;         }          public Boolean ins_DataStage(DataTable datastage, out String msgError)         {             bool boolProcess = true;             msgError = string.Empty;             DataTable dt = new DataTable();             //lista = new List<Negocio>();              SqlParameter[] @params = new SqlParameter[1];             @params[0] = new SqlParameter("@tableDataStage", datastage);              try             {                 if (!bd.ExecuteProcedure(conexionBD, "ins_DataStage", @params, out dt, 120))                 {                     boolProcess = false;                     msgError = bd._error.ToString();                 }                 else                 {                     boolProcess = true;                 }             }             catch (Exception ex)             {                 boolProcess = false;                 msgError = ex.ToString();             }             return boolProcess;         }           public Boolean cons_incidencias(string ?IdNegocio,DateTime Fecha, out List<Incidencia> lista, out String msgError)         {             bool boolProcess = true;             msgError = string.Empty;             DataTable dt = new DataTable();             lista = new List<Incidencia>();              SqlParameter[] @params = new SqlParameter[2];             @params[0] = new SqlParameter("@IdNegocio", IdNegocio);             @params[1] = new SqlParameter("@Fecha", Fecha);              try             {                 if (!bd.ExecuteProcedure(conexionBD, "cons_incidencias",@params, out dt, 120))                 {                     boolProcess = false;                     msgError = bd._error.ToString();                 }                 else                 {                     for (int r = 0; r < dt.Rows.Count; r++)                     {                         Incidencia ins = new Incidencia();                         ins.Id = Convert.ToInt32(dt.Rows[r]["Id"]);                         ins.NumeroFactura = dt.Rows[r]["NumeroFactura"].ToString();                         ins.FechaFacturacion = dt.Rows[r]["FechaFacturacion"].ToString();                         ins.Pedimento = dt.Rows[r]["Pedimento"].ToString();                            lista.Add(ins);                     }                     boolProcess = true;                 }             }             catch (Exception ex)             {                 boolProcess = false;                 msgError = ex.ToString();             }             return boolProcess;         }          public Boolean cons_UsuarioAcceso(string ?correo, out Usuario user, out String msgError)         {             bool boolProcess = false;             msgError = string.Empty;             DataTable dt = new DataTable();             user = new Usuario();              SqlParameter[] @params = new SqlParameter[1];             @params[0] = new SqlParameter("@correo", correo);              try             {                 if (!bd.ExecuteProcedure(conexionBD, "cons_UsuarioAcceso", @params, out dt, 120))                 {                     boolProcess = false;                     msgError = bd._error.ToString();                 }                 else                 {                     for (int r = 0; r < dt.Rows.Count; r++)                     {                         //Usuario user = new Usuario();                         user.Id = Convert.ToInt32(dt.Rows[r]["Id"]);                         user.Nombre = dt.Rows[r]["Nombre"].ToString();                         user.Correo = dt.Rows[r]["Correo"].ToString();                                                 user.UserName = dt.Rows[r]["UserName"].ToString();                         user.IdNegocio = Convert.ToInt32(dt.Rows[r]["IdNegocio"]);                         user.Negocio = dt.Rows[r]["Negocio"].ToString();                         user.IdRol = Convert.ToInt32(dt.Rows[r]["IdRol"]);                         user.Rol = dt.Rows[r]["Rol"].ToString();                         user.consultaInicio = Convert.ToBoolean(dt.Rows[r]["consultaInicio"]);                         user.detalleDash = Convert.ToBoolean(dt.Rows[r]["DetalleDash"]);                        //  usuarios.Add(user);                     }                      if(dt.Rows.Count > 0)                     boolProcess = true;                 }             }             catch (Exception ex)             {                 boolProcess = false;                 msgError = ex.ToString();             }             return boolProcess;         }          public Boolean cons_Negocio(out List<Negocio> lista, out String msgError)         {             bool boolProcess = true;             msgError = string.Empty;             DataTable dt = new DataTable();             lista = new List<Negocio>();              try             {                 if (!bd.ExecuteProcedure(conexionBD, "cons_Negocio", out dt, 120))                 {                     boolProcess = false;                     msgError = bd._error.ToString();                 }                 else                 {                     for (int r = 0; r < dt.Rows.Count; r++)                     {                         Negocio ins = new Negocio();                         ins.Id = dt.Rows[r]["Id"].ToString();                         ins.Descripcion = dt.Rows[r]["Descripcion"].ToString();                         ins.Activo = dt.Rows[r]["Activo"].ToString();                            lista.Add(ins);                     }                     boolProcess = true;                 }             }             catch (Exception ex)             {                 boolProcess = false;                 msgError = ex.ToString();             }             return boolProcess;         }         public Boolean cons_Negocio_by_id(int IdNegocio, out List<Negocio> lista, out String msgError)         {             bool boolProcess = true;             msgError = string.Empty;             DataTable dt = new DataTable();             lista = new List<Negocio>();              SqlParameter[] @params = new SqlParameter[1];             @params[0] = new SqlParameter("@IdNegocio", IdNegocio);              try             {                 if (!bd.ExecuteProcedure(conexionBD, "cons_Negocio_by_id", out dt, 120))                 {                     boolProcess = false;                     msgError = bd._error.ToString();                 }                 else                 {                     for (int r = 0; r < dt.Rows.Count; r++)                     {                         Negocio neg = new Negocio();                         neg.Id =dt.Rows[r]["Id"].ToString();                         neg.Descripcion = dt.Rows[r]["Descripcion"].ToString();                         neg.Activo = dt.Rows[r]["Activo"].ToString();                            lista.Add(neg);                     }                     boolProcess = true;                 }             }             catch (Exception ex)             {                 boolProcess = false;                 msgError = ex.ToString();             }             return boolProcess;         }          public Boolean cons_observaciones_by_id(int IdIncidencia, out List<Observaciones> lista, out String msgError)         {             bool boolProcess = true;             msgError = string.Empty;             DataTable dt = new DataTable();             lista = new List<Observaciones>();              SqlParameter[] @params = new SqlParameter[1];             @params[0] = new SqlParameter("@IdIncidencia", IdIncidencia);              try             {                 if (!bd.ExecuteProcedure(conexionBD, "cons_Observaciones_by_id", @params ,out dt, 120))                 {                     boolProcess = false;                     msgError = bd._error.ToString();                 }                 else                 {                     for (int r = 0; r < dt.Rows.Count; r++)                     {                         Observaciones obs = new Observaciones();                         obs.Id = Convert.ToInt32(dt.Rows[r]["Id"]);                         obs.IdIncidencia = Convert.ToInt32(dt.Rows[r]["IdIncidencia"]);                         obs.Descripcion = dt.Rows[r]["Descripcion"].ToString();                         obs.FechaCreacion = dt.Rows[r]["FechaCreacion"].ToString();                         obs.IdUsuario = Convert.ToInt32(dt.Rows[r]["IdUsuario"]);                          lista.Add(obs);                     }                     boolProcess = true;                 }             }             catch (Exception ex)             {                 boolProcess = false;                 msgError = ex.ToString();             }             return boolProcess;         }          public Boolean cons_XML(int idTasaCero,string UUID, out XML xml, out String msgError)         {             bool boolProcess = true;             msgError = string.Empty;             DataTable dt = new DataTable();            // lista = new List<XML>();            xml = new XML();              SqlParameter[] @params = new SqlParameter[2];             @params[0] = new SqlParameter("@idTasaCero", idTasaCero);             @params[1] = new SqlParameter("@UUID", UUID);              try             {                 if (!bd.ExecuteProcedure(conexionBD, "cons_XML", @params, out dt, 120))                 {                     boolProcess = false;                     msgError = bd._error.ToString();                 }                 else                 {                     //for (int r = 0; r < dt.Rows.Count; r++)                     //{                         xml = new XML();                         xml.Id = Convert.ToInt32(dt.Rows[0]["Id"]);                         xml.UUID = dt.Rows[0]["UUID"].ToString();                         xml.Pedimento = dt.Rows[0]["Pedimento"].ToString();                         xml.Xml_doc = dt.Rows[0]["XML"].ToString();                                              //    lista.Add(xml);                     //}                     boolProcess = true;                 }             }             catch (Exception ex)             {                 boolProcess = false;                 msgError = ex.ToString();             }             return boolProcess;         }          public Boolean cons_dashboard(int IdIncidencia, int? IdNegocio, out List<cDashboard> lista, out String msgError)         {             bool boolProcess = true;             msgError = string.Empty;             DataTable dt = new DataTable();             lista = new List<cDashboard>();              SqlParameter[] @params = new SqlParameter[2];             @params[0] = new SqlParameter("@IdIncidencia", IdIncidencia);             @params[1] = new SqlParameter("@IdNegocio", IdNegocio);              try             {                  if (!bd.ExecuteProcedure(conexionBD, "cons_dashboard", @params, out dt, 120))                 {                     boolProcess = false;                     msgError = bd._error.ToString();                 }                 else                 {                     for (int r = 0; r < dt.Rows.Count; r++)                     {                         cDashboard dh = new cDashboard();                         dh.DocumentosTotales = Convert.ToInt32(dt.Rows[r]["DocumentosTotales"]);                         dh.Incidencias = Convert.ToInt32(dt.Rows[r]["Incidencias"]);                         dh.FechaCreacion = dt.Rows[r]["FechaCreacion"].ToString();                         dh.FechaUltimaActualizacion = dt.Rows[r]["FechaUltimaActualizacion"].ToString();                         dh.Negocio = dt.Rows[r]["Negocio"].ToString();                         dh.Estatus = dt.Rows[r]["Estatus"].ToString();                          lista.Add(dh);                     }                     boolProcess = true;                 }             }             catch (Exception ex)             {                 boolProcess = false;                 msgError = ex.ToString();             }             return boolProcess;         }          public Boolean cons_dashboard_by_status(int IdIncidencia, int? IdEstatus, out List<cDashboard> lista, out String msgError)         {             bool boolProcess = true;             msgError = string.Empty;             DataTable dt = new DataTable();             lista = new List<cDashboard>();              SqlParameter[] @params = new SqlParameter[2];             @params[0] = new SqlParameter("@IdIncidencia", IdIncidencia);             @params[1] = new SqlParameter("@IdEstatus", IdEstatus);              try             {                  if (!bd.ExecuteProcedure(conexionBD, "cons_dashboard_by_status", @params, out dt, 120))                 {                     boolProcess = false;                     msgError = bd._error.ToString();                 }                 else                 {                     for (int r = 0; r < dt.Rows.Count; r++)                     {                         cDashboard dh = new cDashboard();                         dh.DocumentosTotales = Convert.ToInt32(dt.Rows[r]["DocumentosTotales"]);                         dh.Incidencias = Convert.ToInt32(dt.Rows[r]["Incidencias"]);                         dh.FechaCreacion = dt.Rows[r]["FechaCreacion"].ToString();                         dh.FechaUltimaActualizacion = dt.Rows[r]["FechaUltimaActualizacion"].ToString();                         dh.Negocio = dt.Rows[r]["Negocio"].ToString();                         dh.Estatus = dt.Rows[r]["Estatus"].ToString();                          lista.Add(dh);                     }                     boolProcess = true;                 }             }             catch (Exception ex)             {                 boolProcess = false;                 msgError = ex.ToString();             }             return boolProcess;         }          public Boolean cons_Estatus(int IdEstatus, out List<cEstatus> lista, out String msgError)         {             bool boolProcess = true;             msgError = string.Empty;             DataTable dt = new DataTable();             lista = new List<cEstatus>();              SqlParameter[] @params = new SqlParameter[1];             @params[0] = new SqlParameter("@IdEstatus", IdEstatus);              try             {                  if (!bd.ExecuteProcedure(conexionBD, "cons_Estatus", @params, out dt, 120))                 {                     boolProcess = false;                     msgError = bd._error.ToString();                 }                 else                 {                     for (int r = 0; r < dt.Rows.Count; r++)                     {                         cEstatus st = new cEstatus();                         st.Id = Convert.ToInt32(dt.Rows[r]["Id"]);                         st.Descripcion = dt.Rows[r]["Descripcion"].ToString();                         st.Activo = Convert.ToInt32(dt.Rows[r]["Activo"]);                          lista.Add(st);                     }                     boolProcess = true;                 }             }             catch (Exception ex)             {                 boolProcess = false;                 msgError = ex.ToString();             }             return boolProcess;         }          public Boolean InsertarObservacion(int idIncidencia, string Observacion, int idUsuario, out DataTable dt, out String msgError)         {             bool boolProcess = true;             dt = new DataTable();             msgError = string.Empty;             int i = 0;             SqlParameter[] @params = new SqlParameter[3];             @params[i] = new SqlParameter("@idIncidencia", idIncidencia);             i++;             @params[i] = new SqlParameter("@Observacion", Observacion);             i++;             @params[i] = new SqlParameter("@idUsuario", idUsuario);              try             {                  if (!bd.ExecuteProcedure(conexionBD, "ins_Observacion", @params, out dt, 120))                 {                     boolProcess = false;                     msgError = bd._error.ToString();                 }             }             catch (Exception ex)             {                 boolProcess = false;                 msgError = ex.ToString();             }             return boolProcess;         }      } }