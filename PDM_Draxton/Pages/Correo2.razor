@page "/correo-2"
@page "/correo-2/{Clave}/{Periodo}/{Archivo}/{DocsTotales}/{NomUsuario}/{Mail}/{IdNegocio}"
@page "/correo-2/{IdPeriodo}/{IdNegocio}/{Clave}/{Estatus}/{Negocio}/{DocsTotales}/{Incidencias}/{Activas}/{DescPeriodo}"
@layout MainLayout 
@inherits PDM_Draxton.Pages.Correo2Component

@using PDM_Draxton.Data;
@using PDM_Draxton.Services;
@using PDM_Draxton.utilidades;
@using Radzen
@using Radzen.Blazor
@using Blazor.Models.Sample
@inject Microsoft.Extensions.Localization.IStringLocalizer<Correo2> L
@inject IdentityInformation _identity
@inject NavigationManager _navigationManager

<PageTitle>Correo2</PageTitle>

@if (_identity.Rol=="Comercio" || _identity.Rol == "Administrador")
{
        @if (Clave == "RECHAZADO")
        msgLabelMail = "Se Informara al negocio del rechazo del Período"; 
        else
        msgLabelMail = "Se enviará un correo al negocio notificando la carga del archivo" + s_Estatus;
}

<RadzenContent Container="main">
  <ChildContent>
    <RadzenHeading Size="H1" Text="Correo">
    </RadzenHeading>
    <div class="row">
      <div class="col-md-12" style="display: inline-block">
                <RadzenLabel Text="@msgLabelMail">
        </RadzenLabel>
       @* <RadzenCheckBox style="margin-bottom: 10px; margin-left: 05px; margin-right: 05px; margin-top: 10px" Name="Checkbox0" TValue="bool">
        </RadzenCheckBox>
        <RadzenLabel style="font-weight: bold" Text="Agregar comentario (Opcional)">
        </RadzenLabel>*@
        <div class="row">
          <div class="col-md-12">
            <RadzenTextArea style="margin-top: 15px; width: 100%" Name="Textarea0" @bind-Value="@s_observacion" MaxLength="500">
            </RadzenTextArea>
          </div>
        </div>
        <div class="row">
          <div class="col-md-12" style="text-align: center">
               <RadzenButton Click="@Enviar"  Icon="email" IsBusy="false" Text="Enviar">
            </RadzenButton>
            <RadzenButton Click="@Cancelar" Visible=@visible IsBusy="false" Text="Cancelar">
            </RadzenButton>
          </div>
        </div>
      </div>
    </div>
  </ChildContent>
</RadzenContent>

@code{

    private string msgLabelMail = String.Empty;
    private string s_Estatus = String.Empty;
    private string cambioEstatus = String.Empty;
    private string msgAsuntoMail = String.Empty;
    private string destinatarios = String.Empty;
    private string s_observacion = String.Empty;

    [Parameter]
    public int? IdPeriodo { get; set; }

    [Parameter]
    public string Periodo { get; set; }

    [Parameter]
    public string Archivo { get; set; }

    [Parameter]
    public int IdNegocio { get; set; }

    [Parameter]
    public string Estatus { get; set; }

    [Parameter]
    public string Clave { get; set; }

    [Parameter]		   
    public string Negocio { get; set; }

    [Parameter]		   
    public string DescPeriodo { get; set; }

    [Parameter]
    public int DocsTotales { get; set; }

    [Parameter]
    public int Incidencias { get; set; }

    [Parameter]
    public int Activas { get; set; }

    [Parameter]
    public string NomUsuario { get; set; }

    [Parameter]
    public string Mail { get; set; }

    [Parameter]
    public string fecha { get; set; }

    DataAccess da = new DataAccess();
    public bool visible = true;

    public void Cancelar()
    {
        DialogService.Close(true);
        return;
    }

    protected override async Task OnInitializedAsync()
    {
        if (IdPeriodo is null)
            visible = false;

    }

    public void Enviar()
    {
        if (Clave == "RECHAZADO")
        {            
            msgLabelMail = "Rechazado por Comercio Exterior";
            msgAsuntoMail = "Periodo Rechazado por Comercio Exterior";
            destinatarios = da.cons_Destinatarios(_identity.IdUsuario, IdNegocio, Clave);
            enviaMail();
        }

        if (Clave == "ABIERTO")
        {            
            msgLabelMail = "Se notifica la carga del archivo DataStage del periodo: " + Periodo;
            msgAsuntoMail = "Carga del Archivo DataStage Periodo " + Periodo;
            destinatarios = da.cons_Destinatarios(_identity.IdUsuario, IdNegocio, Clave);
            enviaMail();
        }
    }

    public void enviaMail()
    {
        Email correo = new Email();
        try
        {
            if (!correo.enviaCorreo(Clave,Archivo,NomUsuario ,Mail, Negocio, DocsTotales, Incidencias, Activas, Estatus, fecha, msgAsuntoMail, destinatarios,s_observacion,DescPeriodo, out string msgError))
            {
                DialogService.Alert("Error al enviar el correo", "Aviso", new AlertOptions() { OkButtonText = "OK" });
                DialogService.Close(true);
                return;

            }

            DataAccess da = new DataAccess();

            if (da.upd_EstatusPeriodoNegocio(IdPeriodo, IdNegocio, Clave, out String msgErrorInc))
            {
                //if (cambioEstatus == "RECHAZADO")
                //{
                    DialogService.Alert(msgAsuntoMail, "Aviso", new AlertOptions() { OkButtonText = "OK" });

                //}


                DialogService.Close(true);

            }

        }
        catch (Exception e)
        {
            var msg = e.Message;

        }
    }

}   